<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>vertx-pagseguro-parent</artifactId>
        <groupId>io.vertx.pagseguro</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>kafka-app</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Kafka Vertx with Debezium integration</name>
    <description>Simple embedded vert.x fatjar</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <vertx.version>3.8.3</vertx.version>
        <kafka.version>2.1.0</kafka.version>
        <debezium.version>0.8.3.Final</debezium.version>
        <!-- fabric8 version -->
        <fabric8.version>2.2.142</fabric8.version>
        <docker.maven.plugin.version>0.15.9</docker.maven.plugin.version>

        <!-- Docker & Fabric8 Configs -->
        <docker.from>fabric8/java-jboss-openjdk8-jdk:1.1.5</docker.from>
        <fabric8.dockerUser>fabric8/</fabric8.dockerUser>
        <fabric8.image>${fabric8.dockerUser}${project.artifactId}:${project.version}</fabric8.image>

        <fabric8.service.name>${project.artifactId}</fabric8.service.name>
        <fabric8.service.port>80</fabric8.service.port>
        <fabric8.service.containerPort>8080</fabric8.service.containerPort>
        <fabric8.service.type>LoadBalancer</fabric8.service.type>

        <fabric8.readinessProbe.httpGet.port>8080</fabric8.readinessProbe.httpGet.port>
        <fabric8.readinessProbe.httpGet.path>/</fabric8.readinessProbe.httpGet.path>
        <fabric8.readinessProbe.timeoutSeconds>30</fabric8.readinessProbe.timeoutSeconds>
        <fabric8.readinessProbe.initialDelaySeconds>5</fabric8.readinessProbe.initialDelaySeconds>

        <fabric8.label.group>quickstarts</fabric8.label.group>
        <fabric8.iconRef>vertx</fabric8.iconRef>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-project-bom-with-platform-deps</artifactId>
                <version>${fabric8.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- vertx -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
            <version>${vertx.version}</version>
        </dependency>

        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web</artifactId>
            <version>${vertx.version}</version>
        </dependency>

        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-kafka-client</artifactId>
            <version>${vertx.version}</version>
        </dependency>

        <!-- debezium -->
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-core</artifactId>
            <version>${debezium.version}</version>
        </dependency>

        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-core</artifactId>
            <version>${debezium.version}</version>
            <type>test-jar</type>
        </dependency>

        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.12</artifactId>
            <version>${kafka.version}</version>
        </dependency>

        <!-- utils -->

        <dependency>
            <groupId>io.vertx.pagseguro</groupId>
            <artifactId>utils-lib</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

    </dependencies>

    <build>
        <defaultGoal>install</defaultGoal>

        <plugins>
            <!-- Vert.x requires Java 8 -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>io.pagseguro.vertx.kafka.MainVerticle</Main-Class>
                                    </manifestEntries>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource>
                                </transformer>
                            </transformers>
                            <artifactSet></artifactSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${fabric8.version}</version>
                <executions>
                    <execution>
                        <id>json</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>json</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
                    <images>
                        <image>
                            <name>${fabric8.image}</name>
                            <build>
                                <from>${docker.from}</from>
                                <assembly>
                                    <basedir>/app</basedir>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <env>
                                    <JAVA_APP_JAR>${project.build.finalName}.jar</JAVA_APP_JAR>
                                </env>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>

            <!-- allows the route to be ran via 'mvn exec:java' -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <configuration>
                    <mainClass>io.pagseguro.vertx.kafka.MainVerticle</mainClass>
                </configuration>
            </plugin>

        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings
                    only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>io.fabric8</groupId>
                                        <artifactId>
                                            fabric8-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [2.2.142,)
                                        </versionRange>
                                        <goals>
                                            <goal>json</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <!-- Default sample commands: mvn -Pf8-build ... build Docker images and
        create OpenShift deployment configs mvn -Pf8-deploy ... f8-build + push to
        Docker registry + applying deployment config to OpenShift mvn -Pf8-local-deploy
        ... deployment for a single node setup without pushing to a registry For
        individual goal usage please consult the fabric8 documentation -->
    <profiles>
        <profile>
            <id>f8-build</id>
            <build>
                <defaultGoal>clean install docker:build fabric8:json</defaultGoal>
            </build>
        </profile>
        <profile>
            <id>f8-deploy</id>
            <properties>
                <fabric8.imagePullPolicySnapshot>Always</fabric8.imagePullPolicySnapshot>
                <fabric8.recreate>true</fabric8.recreate>
            </properties>
            <build>
                <defaultGoal>clean install docker:build docker:push fabric8:json fabric8:apply</defaultGoal>
            </build>
        </profile>
        <profile>
            <id>f8-local-deploy</id>
            <properties>
                <fabric8.recreate>true</fabric8.recreate>
            </properties>
            <build>
                <defaultGoal>clean install docker:build fabric8:json fabric8:apply</defaultGoal>
            </build>
        </profile>
    </profiles>

</project>
